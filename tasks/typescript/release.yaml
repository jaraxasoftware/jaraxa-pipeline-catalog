apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: NPM_CONFIG_USERCONFIG
            value: /tekton/home/npm/.npmrc
          - name: HOME
            value: /tekton/home
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources:
            limits: {}
          volumeMounts: []
          workingDir: /workspace/source
        steps:
        - env:
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          - name: GIT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: tekton-git
          image: ghcr.io/jenkins-x/jx-release-version:2.7.10
          name: next-version
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx-release-version -tag -debug -previous-version=from-tag:"^v\d+\.\d+\.\d+$" > VERSION
        - image: ghcr.io/jenkins-x/jx-release-version:2.7.10
          name: next-version-uat
          script: |
            #!/usr/bin/env sh
            jx-release-version -debug -previous-version=from-tag:"^v\d+\.\d+\.\d+$" -next-version=semantic:strip-prerelease -output-format "{{.Major}}.{{.Minor}}.{{.Patch}}"-UAT-$BUILD_ID > VERSION
        - image: ghcr.io/jenkins-x/jx-release-version:2.7.10
          name: next-version-package-json
          script: |
            #!/usr/bin/env sh
            jx-release-version -debug -next-version=from-file:package.json > VERSION
        - image: ghcr.io/jenkins-x/jx-release-version:2.7.10
          name: next-version-package-json-uat
          script: |
            #!/usr/bin/env sh
            jx-release-version -debug -next-version=from-file:package.json -output-format "{{.Major}}.{{.Minor}}.{{.Patch}}"-UAT-$BUILD_ID > VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.11.107
          name: jx-variables
          resources:
            # set requests for the pod here
            requests:
              cpu: 400m
              memory: 512Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        - image: node:18-slim
          name: build-npm-install
          resources: {}
          script: |
            #!/bin/sh
            npm install
        - image: node:18-slim
          name: build-npm-test
          resources: {}
          script: |
            #!/bin/sh
            CI=true DISPLAY=:99 npm run test:run
        - image: node:18-slim
          name: build-npm-version
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh
            npm --no-git-tag-version version $VERSION --allow-same-version
        - image: node:18-slim
          name: build-npm-publish
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh
            npm publish
        - image: sonarsource/sonar-scanner-cli:11.0
          name: sonar-code-analisys
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh
            export SONAR_TOKEN=$SONAR_TOKEN
            sonar-scanner \
              -Dsonar.projectName=$APP_NAME \
              -Dsonar.token=$SONAR_TOKEN \
              -Dsonar.host.url=$SONAR_URL \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.branch.name=$PULL_BASE_REF \
              -Dsonar.projectVersion=$VERSION \
              -Dsonar.exclusions=$SONAR_EXCLUSIONS \
              -Dsonar.javascript.node.maxspace=8192
        - image: ghcr.io/jenkins-x/jx-registry:0.1.10
          name: check-registry
          resources: {}
        - image: gcr.io/kaniko-project/executor:v1.23.0-debug
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS \
              --skip-unused-stages \
              --cache=true \
              --cache-repo=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME \
              --cache-copy-layers \
              --cleanup \
              --context=/workspace/source \
              --dockerfile=${DOCKERFILE_PATH:-Dockerfile} \
              --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION \
              --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:latest
        - image: ghcr.io/jenkins-x/jx-boot:3.11.107
          name: promote-changelog-uat
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Pre-release version $VERSION"
            git push --force origin v$VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.11.107
          name: promote-changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION

            jx changelog create --version v${VERSION} --output-markdown ../changelog.md
        - image: jnorwood/helm-docs:v1.4.0
          name: chart-docs
          resources: {}
          script: |
            #!/bin/ash
            if [ -d "charts/$REPO_NAME" ]; then cd charts/$REPO_NAME
            helm-docs; else echo no charts; fi
        - image: ghcr.io/jenkins-x/jx-boot:3.11.107
          name: promote-helm-release
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx gitops helm release --version $VERSION
        - image: ghcr.io/jenkins-x-plugins/jx-promote:0.6.5
          name: promote-jx-promote
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx promote -b --env $ENVIRONMENT --timeout 1h --no-poll --version $VERSION
        - name: promote-jx-updatebot-sync
          image: ghcr.io/jenkins-x/jx-updatebot:0.4.1
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx updatebot sync --source-env $ENVIRONMENT --target-env $PREVIEW_ENV --charts $APP_NAME
        volumes:
        - name: npmrc
          secret:
            optional: true
            secretName: npmrc
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
