apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:
          - name: _JAVA_OPTIONS
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
              -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5
              -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
              -Xms10m -Xmx192m
          - name: MAVEN_OPTS
            value: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
              -Dmaven.wagon.http.retryHandler.count=3
          - name: HOME
            value: /tekton/home
          envFrom:
          - secretRef:
              name: jx-boot-job-env-vars
              optional: true
          name: ""
          resources:
            limits: {}
          volumeMounts:
          - mountPath: /root/.m2/
            name: maven-settings
          - mountPath: /root/.gnupg
            name: release-gpg
          workingDir: /workspace/source
        steps:
        - env:
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          - name: GIT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: tekton-git
          image: ghcr.io/jenkins-x/jx-release-version:2.6.0
          name: next-version
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx-release-version --tag --debug > VERSION
        - image: ghcr.io/jenkins-x/jx-release-version:2.6.0
          name: next-version-uat
          script: |
            #!/usr/bin/env sh
            jx-release-version -debug -next-version=semantic:strip-prerelease -output-format "{{.Major}}.{{.Minor}}.{{.Patch}}"-UAT-$BUILD_ID > VERSION             
        - image: ghcr.io/jenkins-x/jx-boot:3.9.5
          name: jx-variables
          resources:
            # set requests for the pod here
            requests:
              cpu: 400m
              memory: 512Mi
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        - image: node:8-slim
          name: build-npm-install
          resources: {}          
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            npm ci --prefer-offline --no-audit
            ./node_modules/.bin/gulp release
        - image: maven:3.6-openjdk-8-slim
          name: build-mvn-deploy-snapshot
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh

            # modify the pom.xml
            echo "upgrading the pom to snapshot version $VERSION"
            mvn versions:set -DnewVersion=$VERSION-SNAPSHOT

            mvn clean --no-transfer-progress deploy            
        - image: maven:3.6-openjdk-8-slim
          name: build-mvn-deploy
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh

            # modify the pom.xml
            echo "upgrading the pom to version $VERSION"
            mvn versions:set -DnewVersion=$VERSION

            mvn clean --no-transfer-progress deploy
        - image: maven:3.6-openjdk-8-slim
          name: build-mvn-sonar-scan
          resources: {}
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh

            mvn clean verify sonar:sonar \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.exclusions=$SONAR_EXCLUSIONS \
              -Dsonar.sourceEncoding=UTF-8 \
              -Dsonar.sources=. \
              -Dsonar.projectVersion=$VERSION \
              -Dsonar.host.url=$SONAR_URL \
              -Dsonar.login=$SONAR_TOKEN          
        - image: ghcr.io/jenkins-x/jx-registry:0.1.8
          name: check-registry
          resources: {}
        - image: sonarsource/sonar-scanner-cli:4.7.0
          name: sonar-code-analisys
          resources: {}
          script: |
            #!/bin/bash
            source .jx/variables.sh
            export SONAR_TOKEN=$SONAR_TOKEN
            sonar-scanner \
              -Dsonar.projectKey=$SONAR_PROJECT_KEY \
              -Dsonar.exclusions=$SONAR_EXCLUSIONS \
              -Dsonar.sourceEncoding=UTF-8 \
              -Dsonar.sources=. \
              -Dsonar.projectVersion=$VERSION \
              -Dsonar.host.url=$SONAR_URL          
        - image: gcr.io/kaniko-project/executor:v1.6.0-debug
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS \
              --skip-unused-stages \
              --cache=true \
              --cache-repo=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME \
              --cache-copy-layers \
              --context=/workspace/source \
              --dockerfile=${DOCKERFILE_PATH:-Dockerfile} \
              --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION \
              --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:latest 
        - image: ghcr.io/jenkins-x/jx-changelog:0.3.0
          name: promote-changelog-uat
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi
        - image: ghcr.io/jenkins-x/jx-changelog:0.3.0
          name: promote-changelog
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh

            if [ -d "charts/$REPO_NAME" ]; then
            jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
            jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
            jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
            else echo no charts; fi

            jx changelog create --version v${VERSION}

            git add * || true
            git commit -a -m "chore: release $VERSION" --allow-empty
            git tag -fa v$VERSION -m "Release version $VERSION"
            git push --force origin v$VERSION
        - image: ghcr.io/jenkins-x/jx-boot:3.9.5
          name: promote-helm-release
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx gitops helm release
        - env:
          - name: GIT_TOKEN
            valueFrom:
              secretKeyRef:
                key: password
                name: tekton-git
          - name: GIT_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: tekton-git
          image: ghcr.io/jenkins-x-plugins/jx-promote:0.6.2
          name: promote-jx-promote
          resources: {}
          script: |
            #!/usr/bin/env sh
            source .jx/variables.sh
            jx promote -b --all --timeout 1h --no-poll
        volumes:
        - name: maven-settings
          secret:
            secretName: jenkins-maven-settings
        - name: release-gpg
          secret:
            optional: true
            secretName: jenkins-release-gpg
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
