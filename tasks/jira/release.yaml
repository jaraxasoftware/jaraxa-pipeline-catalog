apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: jira-release
spec:
  stepTemplate:
    env:
    - name: HOME
      value: /tekton/home
    envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    name: ""
    resources: {}
  steps:
  - image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
    name: git-history
    resources: {}
    script: |
      #!/bin/sh
      git fetch --prune --tags
  - image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.27.0
    name: collect-issues
    resources: {}
    script: |
      #!/bin/sh
      export LC_ALL=en_US.utf8
      git log $(git describe --abbrev=0 --tags 2> /dev/null || git rev-list --max-parents=0 HEAD)..HEAD | \
        grep -oE "$JIRA_PROJECT-[[:digit:]]{1,}" | sort | uniq | \
        sed 's/^\|$/"/g' | paste -sd , - | awk '{print ""$0}' | export RELATED_JIRA_ISSUES
  - envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    image: docker.io/curlimages/curl:7.72.0
    name: invoke-jira-webhook
    resources: {}
    script: |
      #!/bin/sh
      curl -s -XPOST -H "Content-Type: application/json" -d '{"data": {"version": "$VERSION","projectname": "$JIRA_PROJECT"}, "issues": ["${RELATED_JIRA_ISSUES}"]}' $JIRA_WEBHOOK_URL
  workspaces:
  - description: The git repo will be cloned onto the volume backing this workspace
    mountPath: /workspace
    name: output
