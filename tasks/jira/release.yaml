apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  name: jira-release
spec:
  stepTemplate:
    env:
    - name: HOME
      value: /tekton/home
    envFrom:
    - secretRef:
        name: jx-boot-job-env-vars
        optional: true
    name: ""
    resources: {}
    workingDir: /workspace/source
  steps:
  - image: ghcr.io/jenkins-x/jx-boot:3.11.49
    name: jx-variables
    resources: {}
    script: |
      #!/usr/bin/env sh
      jx gitops variables
  - image: ghcr.io/jenkins-x/jx-boot:3.11.49
    name: git-history
    resources: {}
    script: |
      #!/usr/bin/env sh
      set -x
      git fetch --prune --tags --force
  - env:
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          key: oauth
          name: lighthouse-oauth-token
    image: ghcr.io/jenkins-x/jx-boot:3.11.49
    name: collect-issues
    resources: {}
    script: |
      #!/usr/bin/env sh
      source .jx/variables.sh
      set -x
      apk add github-cli
      gh release view v$VERSION | \
        grep -oE "$JIRA_PROJECT-[[:digit:]]{1,}" | sort | uniq | \
        paste -sd , - | awk '{print "\"" $0 "\""}' > JIRA_ISSUES
  - image: ghcr.io/jenkins-x/jx-boot:3.11.49
    name: invoke-jira-webhook
    resources: {}
    script: |
      #!/usr/bin/env sh
      source .jx/variables.sh
      export RELATED_JIRA_ISSUES=$(cat ./JIRA_ISSUES)
      echo JIRA Tickets are: $RELATED_JIRA_ISSUES
      set -x
      curl -XPOST -H "Content-Type: application/json" -d '{"data": {"version": "'"$APP_NAME - $VERSION"'","projectname": "'"$JIRA_PROJECT"'"}, "issues": ['"$RELATED_JIRA_ISSUES"']}' $JIRA_WEBHOOK_URL
